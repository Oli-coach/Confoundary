<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Trinity Paradox Engine</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #0f0f23 0%, #1a1a4a 50%, #2d1b69 100%);
            color: #e0e0e0;
            min-height: 100vh;
            overflow-x: hidden;
        }

        .cosmic-container {
            position: relative;
            min-height: 100vh;
            padding: 2rem;
        }

        .stars {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: 0;
        }

        .star {
            position: absolute;
            background: #fff;
            border-radius: 50%;
            animation: twinkle 3s infinite;
        }

        @keyframes twinkle {
            0%, 100% { opacity: 0.3; transform: scale(1); }
            50% { opacity: 1; transform: scale(1.2); }
        }

        .main-content {
            position: relative;
            z-index: 1;
            max-width: 1400px;
            margin: 0 auto;
        }

        .header {
            text-align: center;
            margin-bottom: 3rem;
            padding: 2rem;
            background: rgba(255, 255, 255, 0.05);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
        }

        .main-title {
            font-size: 3.5rem;
            font-weight: 800;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4, #feca57);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 1rem;
            animation: pulse 2s infinite;
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .subtitle {
            font-size: 1.3rem;
            color: #b0b0b0;
            font-style: italic;
        }

        .trinity-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 2rem;
            margin-bottom: 3rem;
        }

        .framework-card {
            background: rgba(255, 255, 255, 0.08);
            border-radius: 20px;
            padding: 2rem;
            border: 1px solid rgba(255, 255, 255, 0.2);
            backdrop-filter: blur(15px);
            transition: all 0.3s ease;
            cursor: pointer;
            position: relative;
            overflow: hidden;
        }

        .framework-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transition: left 0.5s ease;
        }

        .framework-card:hover::before {
            left: 100%;
        }

        .framework-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.3);
            border-color: rgba(255, 255, 255, 0.4);
        }

        .oli-pop {
            border-left: 4px solid #ff6b6b;
        }

        .esquire {
            border-left: 4px solid #4ecdc4;
        }

        .ccm {
            border-left: 4px solid #feca57;
        }

        .framework-icon {
            font-size: 3rem;
            margin-bottom: 1rem;
            display: block;
        }

        .framework-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            color: #fff;
        }

        .framework-subtitle {
            font-size: 1rem;
            color: #b0b0b0;
            margin-bottom: 1rem;
            font-style: italic;
        }

        .framework-description {
            font-size: 0.95rem;
            line-height: 1.6;
            color: #d0d0d0;
            margin-bottom: 1.5rem;
        }

        .framework-power {
            background: rgba(255, 255, 255, 0.1);
            padding: 1rem;
            border-radius: 10px;
            font-size: 0.9rem;
            border-left: 3px solid;
        }

        .oli-pop .framework-power {
            border-left-color: #ff6b6b;
        }

        .esquire .framework-power {
            border-left-color: #4ecdc4;
        }

        .ccm .framework-power {
            border-left-color: #feca57;
        }

        .interactive-section {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 20px;
            padding: 2rem;
            margin-bottom: 3rem;
            border: 1px solid rgba(255, 255, 255, 0.1);
        }

        .section-title {
            font-size: 2rem;
            font-weight: 700;
            margin-bottom: 2rem;
            text-align: center;
            background: linear-gradient(45deg, #4ecdc4, #45b7d1);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .paradox-input {
            width: 100%;
            padding: 1rem;
            font-size: 1.1rem;
            border: none;
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            color: #fff;
            margin-bottom: 1rem;
            resize: vertical;
            min-height: 100px;
        }

        .paradox-input::placeholder {
            color: #888;
        }

        .process-btn {
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            color: white;
            border: none;
            padding: 1rem 2rem;
            font-size: 1.1rem;
            font-weight: 600;
            border-radius: 50px;
            cursor: pointer;
            transition: all 0.3s ease;
            margin: 1rem auto;
            display: block;
            position: relative;
            overflow: hidden;
        }

        .process-btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: all 0.5s ease;
        }

        .process-btn:hover::before {
            width: 300px;
            height: 300px;
        }

        .process-btn:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 30px rgba(255, 107, 107, 0.3);
        }

        .results-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .result-card {
            background: rgba(255, 255, 255, 0.08);
            border-radius: 15px;
            padding: 1.5rem;
            border: 1px solid rgba(255, 255, 255, 0.2);
            transform: translateY(20px);
            opacity: 0;
            animation: slideIn 0.6s ease forwards;
        }

        .result-card:nth-child(2) {
            animation-delay: 0.2s;
        }

        .result-card:nth-child(3) {
            animation-delay: 0.4s;
        }

        @keyframes slideIn {
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .result-title {
            font-weight: 700;
            margin-bottom: 1rem;
            font-size: 1.2rem;
        }

        .result-content {
            line-height: 1.6;
            color: #d0d0d0;
        }

        .trinity-sigil {
            text-align: center;
            margin: 3rem 0;
            font-size: 2rem;
            animation: rotate 20s linear infinite;
        }

        @keyframes rotate {
            from { transform: rotate(0deg); }
            to { transform: rotate(360deg); }
        }

        .hidden {
            display: none;
        }

        @media (max-width: 768px) {
            .trinity-grid {
                grid-template-columns: 1fr;
            }
            
            .main-title {
                font-size: 2.5rem;
            }
            
            .cosmic-container {
                padding: 1rem;
            }
        }
    </style>
</head>
<body>
    <div class="cosmic-container">
        <div class="stars" id="stars"></div>
        
        <div class="main-content">
            <div class="header">
                <h1 class="main-title">üß© Trinity Paradox Engine</h1>
                <p class="subtitle">Transform Contradictions into Creative Power</p>
            </div>

            <div class="trinity-grid">
                <div class="framework-card oli-pop" onclick="exploreFramework('oli-pop')">
                    <span class="framework-icon">üåÄ</span>
                    <h2 class="framework-title">OLI-POP</h2>
                    <p class="framework-subtitle">The Philosopher</p>
                    <p class="framework-description">
                        Provides foundational wisdom for embracing paradox as creative force. 
                        Transforms confoundaries into engines of insight using spectrum thinking 
                        and organic learning intelligence.
                    </p>
                    <div class="framework-power">
                        <strong>Superpower:</strong> Hold the paradox until logic crystallizes into elegant solutions
                    </div>
                </div>

                <div class="framework-card esquire" onclick="exploreFramework('esquire')">
                    <span class="framework-icon">‚öîÔ∏è</span>
                    <h2 class="framework-title">ESQUIRE</h2>
                    <p class="framework-subtitle">The Engineer</p>
                    <p class="framework-description">
                        Provides systematic methodology for exploring logical possibilities. 
                        Maps constraint spaces and navigates solution territories with 
                        recursive evaluation and structured inquiry.
                    </p>
                    <div class="framework-power">
                        <strong>Superpower:</strong> Frame Lock ‚Üí Navigate ‚Üí Locate Edge ‚Üí Iterate ‚Üí Render Verdict
                    </div>
                </div>

                <div class="framework-card ccm" onclick="exploreFramework('ccm')">
                    <span class="framework-icon">‚öôÔ∏è</span>
                    <h2 class="framework-title">Conceptual Concrete Machine</h2>
                    <p class="framework-subtitle">The Magician</p>
                    <p class="framework-description">
                        Provides intuitive bootstrap energy for paradox transformation. 
                        Asks "How is this already working perfectly?" and watches solutions 
                        emerge from impossible situations.
                    </p>
                    <div class="framework-power">
                        <strong>Formula:</strong> PRODUCTIVITY = PARADOX + POSITIVE SPIN
                    </div>
                </div>
            </div>

            <div class="interactive-section">
                <h2 class="section-title">üîÑ Paradox Processor</h2>
                <p style="text-align: center; margin-bottom: 2rem; color: #b0b0b0;">
                    Enter your contradiction, constraint, or "impossible" situation below. 
                    Watch the Trinity transform it into creative possibility.
                </p>
                
                <textarea class="paradox-input" id="paradoxInput" placeholder="Describe your paradox, contradiction, or seemingly impossible situation...

Examples:
‚Ä¢ I need to be productive but I'm completely stuck
‚Ä¢ Our team needs more control and more freedom
‚Ä¢ I want to be innovative but we have strict constraints
‚Ä¢ We need faster delivery and higher quality"></textarea>
                
                <button class="process-btn" onclick="processParadox()">
                    <span>üîÑ Engage Trinity Engine</span>
                </button>

                <div id="results" class="hidden">
                    <div class="results-grid">
                        <div class="result-card">
                            <h3 class="result-title" style="color: #ff6b6b;">üåÄ OLI-POP Analysis</h3>
                            <div class="result-content" id="oliResult"></div>
                        </div>
                        <div class="result-card">
                            <h3 class="result-title" style="color: #4ecdc4;">‚öîÔ∏è ESQUIRE Framework</h3>
                            <div class="result-content" id="esquireResult"></div>
                        </div>
                        <div class="result-card">
                            <h3 class="result-title" style="color: #feca57;">‚öôÔ∏è CCM Transformation</h3>
                            <div class="result-content" id="ccmResult"></div>
                        </div>
                    </div>
                    
                    <div class="result-card" style="margin-top: 2rem; border: 2px solid rgba(255, 255, 255, 0.3);">
                        <h3 class="result-title" style="color: #96ceb4;">‚ú® Trinity Synthesis</h3>
                        <div class="result-content" id="synthesisResult"></div>
                    </div>
                </div>
            </div>

            <div class="trinity-sigil">
                <div style="font-size: 3rem; margin-bottom: 1rem;">
                    ‚àûüúÅ‚öôÔ∏è<br>
                    üåÄ‚öîÔ∏èüî•
                </div>
                <p style="font-size: 1rem; color: #888; font-style: italic;">
                    "Three approaches, one intelligence, infinite possibility"
                </p>
            </div>
        </div>
    </div>

    <script>
        // Create starfield
        function createStars() {
            const starsContainer = document.getElementById('stars');
            const numStars = 150;
            
            for (let i = 0; i < numStars; i++) {
                const star = document.createElement('div');
                star.className = 'star';
                star.style.left = Math.random() * 100 + '%';
                star.style.top = Math.random() * 100 + '%';
                star.style.width = Math.random() * 3 + 1 + 'px';
                star.style.height = star.style.width;
                star.style.animationDelay = Math.random() * 3 + 's';
                starsContainer.appendChild(star);
            }
        }

        // Process paradox through Trinity Engine
        function processParadox() {
            const input = document.getElementById('paradoxInput').value.trim();
            if (!input) {
                alert('Please enter a paradox or challenge to process!');
                return;
            }

            const resultsDiv = document.getElementById('results');
            resultsDiv.classList.remove('hidden');

            // OLI-POP Analysis
            const oliResult = document.getElementById('oliResult');
            oliResult.innerHTML = generateOliPopAnalysis(input);

            // ESQUIRE Framework
            const esquireResult = document.getElementById('esquireResult');
            esquireResult.innerHTML = generateEsquireAnalysis(input);

            // CCM Transformation
            const ccmResult = document.getElementById('ccmResult');
            ccmResult.innerHTML = generateCCMTransformation(input);

            // Trinity Synthesis
            const synthesisResult = document.getElementById('synthesisResult');
            synthesisResult.innerHTML = generateSynthesis(input);

            // Scroll to results
            resultsDiv.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }

        function generateOliPopAnalysis(input) {
            const paradoxTypes = [
                { pattern: /stuck|block|freeze/i, analysis: "This stillness contains infinite potential movement. The confoundary between action and inaction reveals that being stuck is actually a form of perfect positioning‚Äîyou're gathering energy for the precise right moment." },
                { pattern: /control|freedom/i, analysis: "The spectrum between control and freedom isn't binary‚Äîit's a dynamic dance. True control creates space for authentic freedom, while genuine freedom requires conscious constraints." },
                { pattern: /fast|slow|time/i, analysis: "The paradox of speed reveals that sometimes the fastest path is through slowness. Urgency and patience collaborate when we recognize that 'fast enough' includes the wisdom to know when to accelerate and when to pause." },
                { pattern: /quality|quantity/i, analysis: "This tension dissolves when we see that quantity and quality are not opposing forces but complementary aspects of the same creative process. High standards can actually accelerate production by eliminating waste." }
            ];

            for (const type of paradoxTypes) {
                if (type.pattern.test(input)) {
                    return type.analysis + "<br><br><strong>Spectrum Insight:</strong> Hold both poles simultaneously‚Äîthe resolution exists in the dynamic tension, not in choosing sides.";
                }
            }

            return "This paradox reveals a confoundary‚Äîa productive boundary where opposing forces meet. Rather than resolving the contradiction, embrace it as a spectrum of infinite possibility. The tension itself is generating the solution.<br><br><strong>Core Principle:</strong> Paradoxes are not problems to solve but patterns to dance with.";
        }

        function generateEsquireAnalysis(input) {
            return `<strong>Frame Lock:</strong> Constraints identified in your situation.<br><br>
<strong>Navigate Possibles:</strong> Systematic exploration reveals multiple logical pathways within these constraints.<br><br>
<strong>Locate Edge:</strong> The boundaries of current possibility are not fixed‚Äîthey're negotiable territories.<br><br>
<strong>Iterate/Refactor:</strong> Each constraint can be reframed as a design parameter rather than a limitation.<br><br>
<strong>Verdict:</strong> What appears impossible is actually under-explored. The logical possibilities expand when we map the constraint space systematically.`;
        }

        function generateCCMTransformation(input) {
            const transformations = [
                "How is this challenge already the perfect teacher for exactly what you need to learn?",
                "How is this constraint already the precise creative catalyst you've been unconsciously seeking?",
                "How is this 'stuck' state already the most productive movement you could be making right now?",
                "How is this tension already generating the exact energy needed for breakthrough?",
                "How is this 'impossible' situation already demonstrating the path to its own resolution?"
            ];

            const randomTransform = transformations[Math.floor(Math.random() * transformations.length)];

            return `<strong>Reframe Question:</strong> ${randomTransform}<br><br>
<strong>Paradox Fuel:</strong> Your contradiction is pure conceptual concrete‚Äîthe material from which infinite solutions are built.<br><br>
<strong>Bootstrap Energy:</strong> The machine is already running perfectly. The friction you feel IS the productivity. Every "impossible" element is a self-generating power source.`;
        }

        function generateSynthesis(input) {
            return `<strong>Integrated Insight:</strong> Your situation contains three simultaneous truths:<br><br>
‚Ä¢ <strong>Philosophical Truth (OLI-POP):</strong> The paradox is not a problem but a spectrum of creative potential<br><br>
‚Ä¢ <strong>Systematic Truth (ESQUIRE):</strong> Multiple logical pathways exist within your constraints<br><br>
‚Ä¢ <strong>Intuitive Truth (CCM):</strong> The situation is already generating its own perfect solution<br><br>
<strong>Trinity Resolution:</strong> Move forward by embracing all three perspectives simultaneously. The contradiction transforms into a powerful creative engine when approached with philosophical acceptance, systematic exploration, and intuitive confidence in the process.<br><br>
<em>"In the marriage of wisdom, method, and magic, the impossible becomes inevitable."</em>`;
        }

        function exploreFramework(framework) {
            const messages = {
                'oli-pop': 'üåÄ OLI-POP activated! This framework helps you embrace paradox as the fundamental creative force of intelligence. Every contradiction contains infinite possibility waiting to unfold.',
                'esquire': '‚öîÔ∏è ESQUIRE engaged! This systematic approach maps the logical territories within your constraints, revealing pathways that seemed impossible from other angles.',
                'ccm': '‚öôÔ∏è Conceptual Concrete Machine powered up! This intuitive bootstrap engine transforms impossibility into productivity through the simple question: "How is this already working perfectly?"'
            };
            
            alert(messages[framework]);
        }

        // Initialize
        createStars();

        // Add some dynamic interactions
        document.addEventListener('mousemove', (e) => {
            const cards = document.querySelectorAll('.framework-card');
            const mouseX = e.clientX / window.innerWidth;
            const mouseY = e.clientY / window.innerHeight;
            
            cards.forEach((card, index) => {
                const offsetX = (mouseX - 0.5) * 10;
                const offsetY = (mouseY - 0.5) * 10;
                card.style.transform = `perspective(1000px) rotateY(${offsetX}deg) rotateX(${offsetY}deg)`;
            });
        });
    </script>
</body>
</html>
